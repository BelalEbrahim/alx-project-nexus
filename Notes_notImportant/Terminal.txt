C:\Users\HP\ecommerce_project\venv\Scripts\Activate.ps1

python manage.py makemigrations
python manage.py migrate
python manage.py collectstatic --noinput
redis-server --port 6380
redis-cli ping


# Run Redis (Broker for Celery):
redis-server --port 6380 &
celery -A ecommerce worker -l info --pool=gevent


python manage.py runserver

pytest



python manage.py createsuperuser

-------------------------------------------------------------------------------------

# Docker
docker-compose up -d --build

# Stop and clean up
docker-compose down

# Rebuild with the updated requirements
docker-compose build --no-cache

# Start services
docker-compose up -d

# Run migrations
docker-compose run web python manage.py makemigrations
docker-compose run web python manage.py migrate

-----------------------------------------------------------------------------------------

# Docker 
# Stop and remove everything (including volumes)
docker-compose down -v

# Rebuild 
docker-compose build --no-cache

# Start services
docker-compose up -d

# Wait a few seconds for the database to be ready
sleep 10

# Run migrations
docker-compose run web python manage.py makemigrations
docker-compose run web python manage.py migrate
docker-compose run celery

-------------------------------------------------------------------------------------------

# Routes

Test Routes:

Browser:

http://127.0.0.1:8000/ (redirects to /api/docs/)
http://127.0.0.1:8000/admin/ (login with superuser)
http://127.0.0.1:8000/test/ (test page)
http://127.0.0.1:8000/health/ (JSON response)


Postman:

POST http://127.0.0.1:8000/api/token/ (get JWT)
GET http://127.0.0.1:8000/api/test-auth/ (with JWT)
GET http://127.0.0.1:8000/api/products/?category=1&ordering=price
POST http://127.0.0.1:8000/api/products/ (create product, check Celery console for email log)
POST http://127.0.0.1:8000/api/categories/ (create product, check Celery console for email log)


body:

{
    "name": "eeee",
    "price": 2.9,
    "stock": 4,
    "category_id": 7
}

{
    "name": "Electronics",
    "description": "Electronic devices and accessories"
}

{
    "username": "testuser",
    "password": "testpass"
}

{
    "username": "demo",
    "password": "demo123"
}

---------------------------------------------------------------------------------------------------------