services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ecommerce_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  web:
    build: .
    entrypoint: /app/entrypoint.sh
    command: gunicorn ecommerce.wsgi:application --bind 0.0.0.0:8000 --workers=3
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_NAME=ecommerce_db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - REDIS_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DEBUG=True
      - SECRET_KEY=jdnzmO2Nxnr-IlvdhHp2GkiznGt2eVrZCwqHCZwDVpC56JxeV4HSh8YlMYtfOxJQXyw

  celery:
    build: .
    entrypoint: /app/entrypoint.sh
    command: celery -A ecommerce worker -l info --pool=gevent --concurrency=4
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1

volumes:
  postgres_data: